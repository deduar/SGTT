{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"for",
				"for\tfor …"
			],
			[
				"ex",
				"ex1"
			],
			[
				"fe",
				"fechaInicio"
			],
			[
				"fech",
				"fechaInicio"
			],
			[
				"fecha",
				"fechaFin"
			],
			[
				"getTy",
				"gettype"
			],
			[
				"e",
				"excepciones"
			],
			[
				"getFe",
				"getFechaFin"
			],
			[
				"empl",
				"empleado"
			],
			[
				"find",
				"findOneBy"
			],
			[
				"supe",
				"supervisorEmpleado"
			],
			[
				"em",
				"empleado"
			],
			[
				"setFe",
				"setFechaFin"
			],
			[
				"form",
				"format"
			],
			[
				"setFec",
				"setFechaInicio"
			],
			[
				"date",
				"dateFechaCreacion"
			],
			[
				"ec",
				"excepcion"
			],
			[
				"date_",
				"date_create"
			],
			[
				"col-",
				"col-sm-9"
			],
			[
				"label",
				"label_attr"
			],
			[
				"is_i",
				"is_integer"
			],
			[
				"la",
				"label_attr"
			],
			[
				"getId",
				"getIdempleado"
			],
			[
				"T",
				"TRUE"
			],
			[
				"strto",
				"strtoupper"
			],
			[
				"wid",
				"min-width"
			],
			[
				"Ty",
				"TypoEstadoExcepcion"
			],
			[
				"Ti",
				"TipoExcepciones"
			],
			[
				"exp",
				"explode"
			],
			[
				"perso",
				"persona"
			],
			[
				"pers",
				"persona"
			],
			[
				"em_",
				"em_j"
			],
			[
				"getP",
				"getPNombre"
			],
			[
				"ids",
				"idsupervisor"
			],
			[
				"list",
				"list-style-type"
			],
			[
				"text",
				"text-decoration"
			],
			[
				"pe",
				"persona"
			],
			[
				"per",
				"personas"
			],
			[
				"ece",
				"excepciones"
			],
			[
				"emp",
				"empleados"
			],
			[
				"emple",
				"empleados"
			],
			[
				"findBy",
				"findByIdempleado"
			],
			[
				"Exec",
				"Excepcion"
			],
			[
				"getI",
				"getId"
			],
			[
				"supervisor_",
				"supervisors_n2"
			],
			[
				"su",
				"supervisors_n2"
			],
			[
				"supo",
				"supervisors_n1"
			],
			[
				"excepc",
				"excepcions_n0"
			],
			[
				"Excepcion_",
				"excepcions_n0"
			],
			[
				"excep",
				"excepcions_n0"
			],
			[
				"exc",
				"excepcions_n0"
			],
			[
				"datet",
				"datetimepicker7"
			],
			[
				"exce",
				"excepcions_supervisors"
			],
			[
				"getid",
				"getIdempleado"
			],
			[
				"a",
				"asset"
			],
			[
				"sc",
				"scheme"
			],
			[
				"dura",
				"duracions_supervisors"
			],
			[
				"marg",
				"margin-bottom"
			],
			[
				"excepcion",
				"excepcions_supervisors"
			],
			[
				"sess",
				"session_id"
			],
			[
				"findB",
				"findAllOrderedByNombre"
			],
			[
				"gli",
				"glyphicon-ok"
			],
			[
				"padd",
				"padding-bottom"
			],
			[
				"mar",
				"margin-bottom"
			],
			[
				"font-s",
				"font-size"
			],
			[
				"th",
				"this"
			],
			[
				"duracio",
				"duracions_supervisors"
			],
			[
				"excepcions",
				"excepcions"
			],
			[
				"id",
				"idsupervisor"
			],
			[
				"wh",
				"where"
			],
			[
				"cre",
				"createQueryBuilder"
			],
			[
				"En",
				"EntityRepository"
			],
			[
				"Ent",
				"EntityType"
			],
			[
				"table",
				"table-vertical"
			],
			[
				"bor",
				"border-radius"
			],
			[
				"spa",
				"span\tTag"
			],
			[
				"se",
				"session"
			],
			[
				"fun",
				"function"
			],
			[
				"user",
				"userId"
			],
			[
				"excepcions_",
				"excepcions_supervisor"
			],
			[
				"wi",
				"width"
			],
			[
				"iss",
				"isset"
			],
			[
				"Passwor",
				"PasswordType"
			],
			[
				"Coms",
				"ComsiguaSgttBundle"
			],
			[
				"req",
				"request"
			],
			[
				"show",
				"showAction"
			],
			[
				"Com",
				"ComsiguaSgttBundle"
			],
			[
				"Sgtt",
				"ComsiguaSgttBundle"
			],
			[
				"hora",
				"fechaHoraDesde"
			],
			[
				"fec",
				"fechaHoraHasta"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/config/parameters.yml",
			"settings":
			{
				"buffer_size": 1539,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\n\nnamespace deduar\\S3SandBoxBundle\\Controller;\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method;\nuse Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;\nuse deduar\\S3SandBoxBundle\\Entity\\Excepcion;\nuse deduar\\S3SandBoxBundle\\Form\\ExcepcionType;\n\n\n\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\DateTimeType;\nuse deduar\\S3SandBoxBundle\\Entity\\Empleado;\n\nuse deduar\\S3SandBoxBundle\\Entity\\TypoEstadoExcepcion;\n\n/**\n * Excepcion controller.\n *\n * @Route(\"/excepcion\")\n */\nclass ExcepcionController extends Controller\n{\n\n    /**\n     * Lists all Excepcion entities.\n     *\n     * @Route(\"/modifcar1\", name=\"modificar1\")\n     * @Method({\"GET\", \"POST\"})\n     */\n    public function modificar1Action(Request $request)\n    {\n        print_r($request->request->all());\n        die('modificar1');\n    }\n\n\n    /**\n     * Lists all Excepcion entities.\n     *\n     * @Route(\"/{id}/gen_report\", name=\"gen_report\")\n     * @Method({\"GET\", \"POST\"})\n     */\n    public function genReportAction(Request $request, Excepcion $excepcion)\n    {\n        $session = $request->getSession();\n        $em = $this->getDoctrine()->getManager();\n        $persona = $em->getRepository('S3SandBoxBundle:Persona')\n                ->findOneBy(array('id'=>$excepcion->getIdempleado()));\n        $empleado = $em->getRepository('S3SandBoxBundle:Empleado')\n                ->findOneBy(array('id'=>$excepcion->getIdempleado()));\n\n        print_r(\"DATOS DEL EMPLEADO -------\"); echo\"<br>\";\n        print_r($excepcion->getId()); echo\"<br>\";\n        print_r($persona->getPNombre());\n        print_r($persona->getPApellido()); echo\"<br>\";\n        print_r($empleado->getFicha()); echo\"<br>\";\n        print_r($excepcion->getFechaCreacion()); echo\"<br>\";\n        print_r($excepcion->getFechaInicio()); echo\"<br>\";\n        print_r($excepcion->getFechaFin()); echo\"<br>\";\n        print_r($excepcion->getFechaFin()->\n                diff($excepcion->getFechaInicio())->\n                format('%y Años %m Meses %d Dias %h Horas %i Minutos'));\n        echo\"<br>\";\n        print_r($excepcion->getObservacion()); echo\"<br>\";\n\n        print_r(\"DATOS DEL Supervisor -------\"); echo\"<br>\";\n        $em_j = $em->getRepository('S3SandBoxBundle:Empleado')\n                ->findOneBy(array('id'=>$excepcion->getIdempleado()));\n\n        if ($em_j->getIdsupervisor() != null) {\n            print_r($em_j->getIdsupervisor()->getId()); echo\"<br>\";\n            $p_j = $em->getRepository('S3SandBoxBundle:Persona')\n                    ->findOneBy(array('id'=>$em_j->getIdsupervisor()->getId()));\n            print_r($p_j->getPNombre());\n            print_r($p_j->getPApellido()); echo \"<br>\";\n            print_r($em_j->getIdcargo()->getNombre()); echo \"<br>\";\n            //print_r($this->date = new \\DateTime());echo \"<br>\";\n\n            print_r(\"DATOS DEL Gerente -------\"); echo\"<br>\";\n            print_r($em_j->getIdsupervisor()->getIdsupervisor()->getId());\n            echo\"<br>\";\n            $em_s = $em->getRepository('S3SandBoxBundle:Empleado')\n                    ->findOneBy(array\n                    ('id'=>$em_j->getIdsupervisor()->getIdsupervisor()->getId()));\n\n            print_r($em_s->getId());\n            $p_s = $em->getRepository('S3SandBoxBundle:Persona')\n                    ->findOneBy(array('id'=>$em_s->getId()));\n            print_r($p_s->getPNombre());\n            print_r($p_s->getPApellido()); echo\"<br>\";\n            print_r($em_s->getIdcargo()->getNombre()); echo \"<br>\";\n        }\n        \n\n        die('GenReport to pdf ------>');\n    }        \n\n    /**\n     * Lists all Excepcion entities.\n     *\n     * @Route(\"/\", name=\"excepcion_index\")\n     * @Method(\"GET\")\n     */\n    public function indexAction(Request $request)\n    {\n        $session = $request->getSession();\n        $em = $this->getDoctrine()->getManager();\n\n        $empleado = $em->getRepository('S3SandBoxBundle:Empleado')\n                ->findOneBy(array('id'=>$session->get('id')));\n        $persona = $em->getRepository('S3SandBoxBundle:Persona')\n                ->findOneBy(array('id'=>$empleado->getIdpersona()));\n\n        $id[]=$session->get('id');\n        $persons[]=$persona;\n\n        while (sizeof($id)) {\n            $excepciones = $em->getRepository('S3SandBoxBundle:Excepcion')\n                            ->findByIdempleado($id);\n            $empleados = $em->getRepository('S3SandBoxBundle:Empleado')\n                        ->findByIdsupervisor($id);\n            $personas = $em->getRepository('S3SandBoxBundle:Persona')\n                        ->findById($id);\n\n            for ($i=0; $i < sizeof($personas); $i++) { \n                $persons[]=$personas[$i];\n            }\n\n            $id=null;\n            for($i=0;$i<(sizeof($empleados));$i++){\n                $id[]=$empleados[$i]->getId();\n            }\n\n            for($i=0;$i<sizeof($excepciones);$i++){\n                $ex[] = $excepciones[$i];\n                $duracions[] = \n                    $excepciones[$i]->getFechaFin()->\n                    diff($excepciones[$i]->getFechaInicio())->\n                    format('%y Años %m Meses %d Dias %h Horas %i Minutos');\n            }\n        }\n\n        if (!(isset($ex))) {\n            $ex = null;\n            $duracions = null;\n        }\n\n        return $this->render('excepcion/index.html.twig', array(\n            'ex' => $ex,\n            'persons' => $persons,\n            'duracions' => $duracions\n        ));\n    }\n\n\n    /**\n     * Creates a new Excepcion entity.\n     *\n     * @Route(\"/new\", name=\"excepcion_new\")\n     * @Method({\"GET\", \"POST\"})\n     */\n    public function newAction(Request $request)\n    {\n        $session = $request->getSession();\n        $em = $this->getDoctrine()->getManager();\n        $excepcion = new Excepcion();\n        $excepcion->setIdempleado($request->getSession()->get('id'));\n        if ($session->get('nivel') == 1) {\n            $form = $this->createForm('deduar\\S3SandBoxBundle\\Form\\ExcepcionEmpleadoType', $excepcion);\n        } \n        if (($session->get('nivel') == 2) or ($session->get('nivel') == 3)) {\n            $form = $this->createForm('deduar\\S3SandBoxBundle\\Form\\ExcepcionSupervisorType', $excepcion);\n        }\n        if ($session->get('nivel') > 3) {\n            $form = $this->createForm('deduar\\S3SandBoxBundle\\Form\\ExcepcionGerenteType', $excepcion);\n        }\n        \n        $form->handleRequest($request);\n\n        if ($form->isSubmitted() && $form->get('cancel')->isClicked()) {\n            return $this->redirectToRoute('excepcion_index');\n        }\n\n        if ($form->isSubmitted() && $form->isValid()) {\n\n            $rep = $this->getDoctrine()->getRepository('S3SandBoxBundle:Excepcion');\n\n            $dif_d = (array_reverse(explode('/',explode(' ',$excepcion->getFechaInicio())[0]),false));\n            $fInit = $dif_d[0].'-'.$dif_d[1].'-'.$dif_d[2].' '.explode(' ',$excepcion->getFechaInicio())[1];\n\n            $dff_d = (array_reverse(explode('/',explode(' ',$excepcion->getFechaFin())[0]),false));\n            $fFin = $dff_d[0].'-'.$dff_d[1].'-'.$dff_d[2].' '.explode(' ',$excepcion->getFechaFin())[1];\n\n            $qInit = $rep->createQueryBuilder('ex')\n                ->where('ex.idempleado = :idempleado')\n                ->andwhere('ex.fechaInicio <= :fechaInicio')\n                ->andwhere('ex.fechaFin >= :fechaInicio')\n                ->setParameter('idempleado', $excepcion->getIdempleado()->getId())\n                ->setParameter('fechaInicio', $fInit)\n                ->getQuery();\n            $ex1 = $qInit->getResult();\n\n            $qEnd = $rep->createQueryBuilder('ex')\n                ->where('ex.idempleado = :idempleado')\n                ->andwhere('ex.fechaInicio <= :fechaFin')\n                ->andwhere('ex.fechaFin >= :fechaFin')\n                ->setParameter('idempleado', $excepcion->getIdempleado()->getId())\n                ->setParameter('fechaFin', $fFin)\n                ->getQuery();\n            $ex2 = $qEnd->getResult();\n\n            if (sizeof($ex1) or sizeof($ex2)) {\n                if (sizeof($ex1) > 0) {\n                    echo\"fecha Inicio ----- <br>\";\n                    for ($i=0; $i<sizeof($ex1) ; $i++) {\n                        $this->addFlash(\n                        'danger',\n                        'No se inserto la Excepcion, ya existe '.$ex1[$i]->getId().' - Inicio');\n                    }\n                }\n                if (sizeof($ex2) > 0) {\n                    echo \"fecha Fin ----- <br>\";\n                    for ($i=0; $i<sizeof($ex2) ; $i++) { \n                        $this->addFlash(\n                        'danger',\n                        'No se inserto la Excepcion, ya existe '.$ex2[$i]->getId().' - Fin');\n                    }\n                }\n                return $this->redirectToRoute('excepcion_index');\n//                die (\"La excepcion ya existe !!!\");\n            }\n\n            $di_d = (array_reverse(explode('/',explode(' ',$excepcion->getFechaInicio())[0]),false));\n            $dinit = $di_d[0].'/'.$di_d[1].'/'.$di_d[2].' '.explode(' ',$excepcion->getFechaInicio())[1];\n            $df_d = (array_reverse(explode('/',explode(' ',$excepcion->getFechaFin())[0]),false));\n            $dfin = $df_d[0].'/'.$df_d[1].'/'.$df_d[2].' '.explode(' ',$excepcion->getFechaFin())[1];\n\n            $excepcion->setFechaInicio(date_create($dinit));\n            $excepcion->setFechaFin(date_create($dfin));\n            $excepcion->setFechaCreacion(new \\DateTime('now'));\n            $excepcion->setEjecutada(FALSE);\n            $excepcion->setEnviada(FALSE);\n            $excepcion->setConformada(FALSE);\n            $excepcion->setRemunerada(FALSE);\n            if($session->get('nivel') == 1){\n                $excepcion->setIdempleado($request->getSession()->get('id'));\n                $excepcion->setEstado(\"CREADA\");\n            }\n\n            if ($session->get('nivel') > 1){\n                $excepcion->setIdempleado($excepcion->getIdempleado()->getId());\n                if($excepcion->getIdempleado() == $session->get('id')){\n                    $excepcion->setEstado(\"CREADA\");\n                } else {\n                    $excepcion->setEstado(\"AUTORIZADA\");\n//                    $excepcion->setConformada(TRUE);\n                }\n            }\n            $em = $this->getDoctrine()->getManager();\n            $em->persist($excepcion);\n            $em->flush();\n\n            return $this->redirectToRoute('excepcion_index');\n        }\n\n        return $this->render('excepcion/new.html.twig', array(\n            'excepcion' => $excepcion,\n            'form' => $form->createView()\n        ));\n    }\n\n    /**\n     * Finds and displays a Excepcion entity.\n     *\n     * @Route(\"/{id}\", name=\"excepcion_show\")\n     * @Method(\"GET\")\n     */\n    public function showAction(Request $request, Excepcion $excepcion)\n    {\n        $session = $request->getSession();\n        $em = $this->getDoctrine()->getManager();\n        $empleado = $em->getRepository('S3SandBoxBundle:Empleado')\n                ->findOneBy(array('id'=>$excepcion->getIdempleado()));\n        $persona = $em->getRepository('S3SandBoxBundle:Persona')\n                ->findOneBy(array('id'=>$excepcion->getIdempleado()));\n        \n        $je = $em->getRepository('S3SandBoxBundle:Persona')\n                ->findOneBy(array('id'=>$empleado->getIdsupervisor()));\n        $jeE = $em->getRepository('S3SandBoxBundle:Empleado')\n                ->findOneBy(array('id'=>$je->getId()));\n\n        $su = $em->getRepository('S3SandBoxBundle:Persona')\n                ->findOneBy(array('id'=>$jeE->getIdsupervisor()));\n        $suE = $em->getRepository('S3SandBoxBundle:Empleado')\n                ->findOneBy(array('id'=>$su->getId()));\n\n        $area = $em->getRepository('S3SandBoxBundle:Area')\n                ->findOneBy(array('id' => $empleado->getIdareaubicacion()));\n\n        $deleteForm = $this->createDeleteForm($excepcion);\n\n        return $this->render('excepcion/show.html.twig', array(\n            'excepcion' => $excepcion,\n            'empleado' => $empleado,\n            'persona' => $persona,\n            'jefe' => $je,\n            'jefeEmpleado' => $jeE,\n            'supervisor' => $su,\n            'supervisorEmpleado' => $suE,\n            'area' => $area,\n            'delete_form' => $deleteForm->createView(),\n        ));\n    }\n\n    /**\n     * Displays a form to edit an existing Excepcion entity.\n     *\n     * @Route(\"/{id}/edit\", name=\"excepcion_edit\")\n     * @Method({\"GET\", \"POST\"})\n     */\n    public function editAction(Request $request, Excepcion $excepcion)\n    {\n        $session = $request->getSession();\n        $em = $this->getDoctrine()->getManager();\n        $deleteForm = $this->createDeleteForm($excepcion);\n\n        $excepcion->setFechaInicio($excepcion->getFechaInicio()->format('d/m/Y H:i'));\n        $excepcion->setFechaFin($excepcion->getFechaFin()->format('d/m/Y H:i'));\n\n        if ($session->get('nivel') == 1) {\n            $editForm = $this->createForm('deduar\\S3SandBoxBundle\\Form\\ExcepcionEmpleadoType', $excepcion);\n        } \n\n        if (($session->get('nivel') == 2) or ($session->get('nivel') == 3)) {\n            if ($excepcion->getIdempleado() == $session->get('id')) {\n                $editForm = $this->createForm('deduar\\S3SandBoxBundle\\Form\\ExcepcionEmpleadoType', $excepcion);\n            } else {\n                $editForm = $this->createForm('deduar\\S3SandBoxBundle\\Form\\ExcepcionSupervisorType', $excepcion);\n            }\n        }\n\n        if ($session->get('nivel') >= 4) {\n            $editForm = $this->createForm('deduar\\S3SandBoxBundle\\Form\\ExcepcionGerenteType', $excepcion);\n        } \n\n        $editForm->handleRequest($request);\n        if ($editForm->isSubmitted() && $editForm->isValid()) {\n\n            $di_d = (array_reverse(explode('/',explode(' ',$excepcion->getFechaInicio())[0]),false));\n            $dinit = $di_d[0].'/'.$di_d[1].'/'.$di_d[2].' '.explode(' ',$excepcion->getFechaInicio())[1];\n            $df_d = (array_reverse(explode('/',explode(' ',$excepcion->getFechaFin())[0]),false));\n            $dfin = $df_d[0].'/'.$df_d[1].'/'.$df_d[2].' '.explode(' ',$excepcion->getFechaFin())[1];\n\n            $excepcion->setFechaInicio(date_create($dinit));\n            $excepcion->setFechaFin(date_create($dfin));\n\n            if($session->get('nivel') == 1){\n                $excepcion->setIdempleado($request->getSession()->get('id'));\n            }\n            if(($session->get('nivel') == 2) or ($session->get('nivel') == 3)){\n                if (is_object($excepcion->getIdempleado())){\n                    $excepcion->setEstado(\"AUTORIZADA\");\n                    $excepcion->setIdempleado($excepcion->getIdempleado()->getId());\n                }\n            }\n            if($session->get('nivel') >= 4) {\n                 $excepcion->setIdempleado($excepcion->getIdempleado()->getId());\n            }\n            $em = $this->getDoctrine()->getManager();\n            $em->persist($excepcion);\n            $em->flush();\n\n            return $this->redirectToRoute('excepcion_index');\n        }\n\n        return $this->render('excepcion/edit.html.twig', array(\n            'excepcion' => $excepcion,\n            'edit_form' => $editForm->createView(),\n            'delete_form' => $deleteForm->createView()\n        ));\n    }\n\n    /**\n     * Cahange status a form an existing Excepcion entity.\n     *\n     * @Route(\"/{id}/reject\", name=\"excepcion_reject\")\n     * @Method({\"GET\", \"POST\"})\n     */\n    public function rejectAction(Request $request, Excepcion $excepcion)\n    {\n        $em = $this->getDoctrine()->getManager();\n        $ex = $em->getRepository('S3SandBoxBundle:Excepcion')\n                ->findOneBy(array('id'=>$excepcion->getId()));\n        $ex->setEstado(\"RECHAZADA\");\n        $ex->setEjecutada(\"FALSE\");\n        $ex->setEnviada(\"FALSE\");\n        $ex->setConformada(\"FALSE\");\n        $ex->setRemunerada(\"FALSE\");\n        $em->persist($ex);\n        $em->flush();\n        return $this->redirectToRoute('excepcion_index');\n    }\n\n    /**\n     * Deletes a Excepcion entity.\n     *\n     * @Route(\"/{id}/delete\", name=\"excepcion_delete\")\n     * @Method(\"GET\")\n     */\n    public function deleteAction(Request $request, Excepcion $excepcion)\n    {\n\n        $em = $this->getDoctrine()->getManager();\n        $em->remove($excepcion);\n        $em->flush();\n\n        return $this->redirectToRoute('excepcion_index');\n    }\n\n    /**\n     * Creates a form to delete a Excepcion entity.\n     *\n     * @param Excepcion $excepcion The Excepcion entity\n     *\n     * @return \\Symfony\\Component\\Form\\Form The form\n     */\n    private function createDeleteForm(Excepcion $excepcion)\n    {\n        return $this->createFormBuilder()\n            ->setAction($this->generateUrl('excepcion_delete', array('id' => $excepcion->getId())))\n            ->setMethod('DELETE')\n            ->getForm()\n        ;\n    }\n}\n",
			"file": "src/deduar/S3SandBoxBundle/Controller/ExcepcionController.php",
			"file_size": 16902,
			"file_write_time": 131282068274011993,
			"settings":
			{
				"buffer_size": 16903,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/Resources/views/excepcion/index.html.twig",
			"settings":
			{
				"buffer_size": 10446,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/deduar/Projects/S3-Sandbox_SGTT",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/excepcion",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Controller",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Resources",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles/web"
	],
	"file_history":
	[
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/excepcion/show.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Excepcion.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/ExcepcionGerenteType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/ExcepcionSupervisorType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/excepcion/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/excepcion/new.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Controller/ExcepcionController.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Empleado.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/ExcepcionEmpleadoType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/excepcion/edit.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles/web/temacsgwebapp/css/sgtt_main.css",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg/user.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/ExcepcionSupervidorType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/ExcepcionType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles/web/temacsgwebapp/css/global.css",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/TypoEstadoExcepcion.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles/web/temacsgwebapp/css/tabla.css",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/maestro/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Controller/MaestroController.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/persona/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/admin/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Controller/EmpleadoController.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/GenderType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/empleado/show.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/excepcion/report.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/ReportType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/Modificar1Type.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/excepcion/index.html_old.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles/web/temacsgwebapp/third/datapicker/index.html",
		"/home/deduar/Projects/S3-Sandbox_SGTT/composer.json",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg/linkscss.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg/script.html.twig",
		"/home/deduar/Projects/datapicker_sandbox/index.html",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Repository/ExcepcionRepository.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/empleado/login.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg/plantilla.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/.gitignore",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Persona.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/AppKernel.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/config/config.yml",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/config/parameters.yml",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/config/config_bck.yml",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/EmpleadoType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/PersonaType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Controller/PersonaController.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/persona/edit.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoexcepcion/show.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoexcepcion/new.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoexcepcion/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoexcepcion/edit.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoestadoexcepcion/show.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoestadoexcepcion/new.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoestadoexcepcion/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/typoestadoexcepcion/edit.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/persona/new.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/empleado/new.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/empleado/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/empleado/edit.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Estado.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Area.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Tiponomina.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Grupo.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Cargo.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Categoria.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Estadocivil.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Ciudad.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Tipovivienda.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/EmpleadoLoginType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/persona/show.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg/plantilla_login.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg/menu.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles/web/temacsgwebapp/third/bootstrap/css/bootstrap_orig.css",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/bundles/web/temacsgwebapp/third/bootstrap/css/bootstrap.css",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/tematwigcsg/bootstarp.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/vendor/apy/datagrid-bundle/Resources/config/services.xml",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/config/parameters_bck.yml",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/base.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/app/Resources/views/base_orig.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Resources/views/Default/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/TypoExcepcion.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/TypoEstadoExcepcionType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Controller/TypoEstadoExcepcionController.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Controller/TypoExcepcionController.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/%F",
		"/home/deduar/Projects/S3-Sandbox_SGTT/web/app.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Form/TypoExcepcionType.php",
		"/home/deduar/Projects/S3-Sandbox_SGTT/S3-Sandbox.sublime-project",
		"/home/deduar/Projects/S3-Sandbox_SGTT/Procfile",
		"/home/deduar/Projects/S3-Sandbox_SGTT/src/deduar/S3SandBoxBundle/Entity/Empleado.php~",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Entity/Empleado.php",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Form/EmpleadoType.php",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/empleado/show.html.twig",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/empleado/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Entity/Persona.php",
		"/home/deduar/Projects/S3-Sandbox/composer.json",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Controller/ExcepcionController.php",
		"/home/deduar/Projects/S3-Sandbox/test.php",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/base.html.twig",
		"/home/deduar/Projects/S3-Sandbox/web/css/main.css",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/empleado/login.html.twig",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Form/EmpleadoLoginType.php",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/login.html.twig",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/default.html.twig",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/excepcion/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Entity/TypoExcepcion.php",
		"/home/deduar/Projects/S3-Sandbox/app/Resources/views/excepcion/show.html.twig",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Form/ExcepcionType.php",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Entity/Excepcion.php",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Controller/EmpleadoController.php",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Controller/TypoExcepcionController.php",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Resources/views/Default/index.html.twig",
		"/home/deduar/Projects/S3-Sandbox/src/deduar/S3SandBoxBundle/Entity/Empleado.php~",
		"/home/deduar/Projects/S3-Sandbox/app/config/config.yml",
		"/home/deduar/Projects/S3-Sandbox/app/config/parameters.yml",
		"/home/deduar/Projects/S3-sandbox/src/deduar/SandboxBundle/Entity/Empleado.php",
		"/home/deduar/Projects/S3-sandbox/src/deduar/SandboxBundle/Entity/Persona.php",
		"/home/deduar/Projects/S3-sandbox/src/deduar/SandboxBundle/Repository/PersonaRepository.php",
		"/home/deduar/Projects/S3-sandbox/src/deduar/SandboxBundle/Repository/EmpleadoRepository.php",
		"/home/deduar/Projects/S3-sandbox/app/config/parameters.yml",
		"/home/deduar/Projects/S3-sandbox/src/deduar/SandboxBundle/Resources/views/Default/index.html.twig",
		"/home/deduar/Projects/S3-sandbox/app/config/config.yml",
		"/home/deduar/Projects/SGTT/app/Resources/views/empleadoexcepcion/show.html.twig",
		"/home/deduar/Projects/SGTT/app/Resources/views/empleado/show.html.twig",
		"/home/deduar/Projects/SGTT/src/Comsigua/SgttBundle/Controller/EmpleadoController.php",
		"/home/deduar/Projects/SGTT/src/Comsigua/SgttBundle/Resources/views/Default/index.html.twig",
		"/home/deduar/Projects/SGTT/src/Comsigua/SgttBundle/Controller/DefaultController.php",
		"/home/deduar/Projects/SGTT/src/Comsigua/SgttBundle/Controller/EmpleadoExcepcionController.php",
		"/home/deduar/Projects/SGTT/app/Resources/views/empleado/index.html.twig"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Fin",
			"05",
			"andWhere",
			"idempleado",
			"check",
			"APROBA",
			"Confo",
			"APROBA",
			"6",
			"setEjecutada",
			"idempleado",
			"'));\n",
			"idempleado",
			"new",
			"idempleado",
			"            }",
			"request",
			"propias",
			"session",
			"table",
			"class",
			"length",
			"findAllOrderedByName",
			"supervisor",
			"new",
			"criteria",
			"duracions",
			"dura",
			"duracion",
			"dura",
			"attr",
			"\"\n",
			"getDescripcion",
			"fecha",
			"ChoiceType",
			"codigo",
			"toSt",
			"getNombre",
			"toSt",
			"table",
			"font",
			"scope",
			"user",
			"Estado",
			"estado",
			"<td>{{ excepcions_supervisor.idtypoexcepcion }}</td>",
			"solicitante",
			"prod",
			"3",
			"solicitante",
			"(\n",
			"secret",
			"root",
			"<?",
			"name",
			"Persona",
			"persona",
			"empleado",
			"EmpleadoRepository",
			"id",
			"idempleado",
			"fech",
			"fechH",
			"fech",
			"fechH",
			"name",
			"db",
			"id_estado",
			"id_pais",
			"pais",
			"idpais",
			"id_pais",
			"Estado",
			"estado",
			"Ciudad",
			"ciudad",
			"Empleado",
			"empleado",
			"\")",
			"Empleado",
			"empleado",
			"TipoExcepcion",
			"tipoexcepcion",
			"name=\"",
			")",
			"(",
			")",
			"area",
			"Area",
			"empleadoexcepcion",
			"update",
			"new",
			"empleadoexcepcion",
			"create",
			"new",
			"create"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Pais",
			"pais",
			"Estado",
			"estado",
			"Ciudad",
			"ciudad",
			"Persona",
			"persona",
			"HistoricoMovExcepcion",
			"historicomovexcepcion",
			"tipoexcepcion",
			"TipoExcepcion",
			"excepciones"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/config/parameters.yml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1539,
						"regions":
						{
						},
						"selection":
						[
							[
								487,
								487
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 426.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/deduar/S3SandBoxBundle/Controller/ExcepcionController.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16903,
						"regions":
						{
						},
						"selection":
						[
							[
								371,
								371
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/Resources/views/excepcion/index.html.twig",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10446,
						"regions":
						{
						},
						"selection":
						[
							[
								223,
								223
							]
						],
						"settings":
						{
							"syntax": "Packages/Syntaxes/HTML (Twig).tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "S3-Sandbox.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 199.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
